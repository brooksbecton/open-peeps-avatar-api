{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","serverRoot","React","useState","heads","setHeads","faces","setFaces","selectedHead","setSelectedHead","selectedFace","setSelectedFace","isShowingCopyAlert","setIsShowingCopyAlert","getAvailableOptions","a","fetch","then","r","json","availableOptions","useEffect","options","length","timer","setTimeout","window","clearTimeout","copyTextToClipboard","text","navigator","clipboard","writeText","err","console","error","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","msg","execCommand","log","removeChild","fallbackCopyTextToClipboard","handleFaceSelect","useCallback","e","target","handleHeadSelect","handleCopy","display","justifyContent","alignItems","flexDirection","padding","width","height","borderRadius","src","alt","paddingTop","paddingBottom","marginLeft","marginRight","onClick","map","f","checked","type","name","onChange","backgroundColor","bottom","fontFamily","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1bc40e2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst App = () => {\n  const serverRoot =\n    process.env.NODE_ENV !== \"production\"\n      ? \"http://localhost:8081\"\n      : \"https://open-peeps.harveythegoodboy.xyz\";\n\n  const [heads, setHeads] = React.useState<string[]>([]);\n  const [faces, setFaces] = React.useState<string[]>([]);\n  const [selectedHead, setSelectedHead] = React.useState(\"\");\n  const [selectedFace, setSelectedFace] = React.useState(\"\");\n  const [isShowingCopyAlert, setIsShowingCopyAlert] = React.useState(false);\n  const getAvailableOptions = async () => {\n    const availableOptions = await fetch(\n      `${serverRoot}/api/images/info`\n    ).then((r) => r.json());\n\n    return availableOptions;\n  };\n\n  React.useEffect(() => {\n    getAvailableOptions().then((options) => {\n      setFaces(options.faces);\n      setHeads(options.heads);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (heads.length > 0) {\n      setSelectedHead(heads[0]);\n    }\n  }, [heads]);\n  React.useEffect(() => {\n    if (faces.length > 0) {\n      setSelectedFace(faces[0]);\n    }\n  }, [faces]);\n\n  React.useEffect(() => {\n    if (isShowingCopyAlert) {\n      const timer = setTimeout(() => {\n        setIsShowingCopyAlert(false);\n      }, 3000);\n      return () => {\n        window.clearTimeout(timer);\n      };\n    }\n  }, [isShowingCopyAlert]);\n\n  const fallbackCopyTextToClipboard = (text: string) => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n\n    // Avoid scrolling to bottom\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    try {\n      var successful = document.execCommand(\"copy\");\n      var msg = successful ? \"successful\" : \"unsuccessful\";\n      console.log(\"Fallback: Copying text command was \" + msg);\n    } catch (err) {\n      console.error(\"Fallback: Oops, unable to copy\", err);\n    }\n\n    document.body.removeChild(textArea);\n  };\n  const copyTextToClipboard = (text: string) => {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    navigator.clipboard.writeText(text).then(\n      function () {},\n      function (err) {\n        console.error(\"Async: Could not copy text: \", err);\n      }\n    );\n  };\n\n  const handleFaceSelect = React.useCallback(\n    (e) => {\n      setSelectedFace(e.target.value);\n    },\n    [setSelectedFace]\n  );\n  const handleHeadSelect = React.useCallback(\n    (e) => {\n      setSelectedHead(e.target.value);\n    },\n    [setSelectedHead]\n  );\n\n  const handleCopy = React.useCallback(() => {\n    copyTextToClipboard(\n      `${serverRoot}/api/images/?face=${selectedFace}&head=${selectedHead}`\n    );\n\n    setIsShowingCopyAlert(true);\n  }, [selectedFace, selectedHead]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        padding: \"1rem\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <h1>Open Peeps Avatar API</h1>\n        <p>\n          Open Peeps is A hand-drawn illustration library. This API provides a\n          way to dynamically request different avatar images.\n        </p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            width: 200,\n            height: 200,\n            borderRadius: 25,\n            padding: 10,\n          }}\n        >\n          {selectedFace && selectedHead && (\n            <img\n              style={{ width: \"100%\" }}\n              src={`${serverRoot}/api/images/?face=${selectedFace}&head=${selectedHead}`}\n              alt={`Open Peeps ${selectedHead} head with ${selectedFace} face`}\n            />\n          )}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingTop: \"1rem\",\n            paddingBottom: \"1rem\",\n          }}\n        >\n          <div\n            style={{\n              marginLeft: 10,\n              marginRight: 10,\n            }}\n          >\n            <pre\n              style={{ display: \"inline\" }}\n            >{`${serverRoot}/api/images/?face=`}</pre>\n            <mark>{selectedFace}</mark>\n            <pre style={{ display: \"inline\" }}>{`&head=`}</pre>\n            <mark>{selectedHead}</mark>\n          </div>\n          <button onClick={handleCopy}>Copy</button>\n        </div>\n      </div>\n\n      <h2>Options</h2>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <div>\n          <h3>Faces</h3>\n          <ul style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {faces.map((f) => (\n              <label key={f}>\n                <input\n                  checked={f === selectedFace}\n                  type=\"radio\"\n                  name=\"face\"\n                  value={f}\n                  onChange={handleFaceSelect}\n                />\n                {f}\n              </label>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h3>Heads</h3>\n          <ul style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {heads.map((f) => (\n              <label key={f}>\n                <input\n                  checked={f === selectedHead}\n                  type=\"radio\"\n                  name=\"head\"\n                  value={f}\n                  onChange={handleHeadSelect}\n                />\n                {f}\n              </label>\n            ))}\n          </ul>\n        </div>\n      </div>\n      {isShowingCopyAlert && (\n        <div\n          style={{\n            backgroundColor: \"salmon\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            position: \"absolute\",\n            left: 20,\n            bottom: 20,\n            borderRadius: 25,\n            padding: 10,\n          }}\n        >\n          <img\n            style={{ width: 150 }}\n            src=\"images/jeeves.png\"\n            alt=\"A older man that looks like a butler\"\n          />\n          <p style={{ fontFamily: \"Times New Roman\" }}>\n            Sir, your text has been copied.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}